1. SELECT CASE WHEN(class=1) THEN 'high' WHEN(class=2) THEN 'average' ELSE 'low' END AS authorized_cap,COUNT(*)  FROM (SELECT NTILE(3) OVER(ORDER BY authorized_cap DESC) AS class FROM maharashtra) AS divided_table GROUP BY class ORDER BY class;

						(or)

1. SELECT CASE WHEN(class=1) THEN '<=1L' WHEN(class=2) THEN '1L to 10L' WHEN(class=3) THEN '10L to 1Cr' WHEN(class=4) THEN '1Cr to 10Cr' WHEN(class=5) THEN '>10Cr' END AS authorized_cap_range,COUNT(*) FROM (SELECT CASE WHEN (authorized_cap <= 1e5) THEN 1 WHEN (authorized_cap <= 1e6) THEN 2 WHEN (authorized_cap <= 1e7) THEN 3 WHEN (authorized_cap <= 1e8) THEN 4 ELSE 5 END AS class FROM maharashtra) AS classed_table GROUP BY class ORDER BY class;


2. SELECT CASE WHEN(LENGTH(date_part)>2) THEN date_part WHEN(cast(year_part AS int) >= 0 AND cast(year_part AS int) <= 21) THEN '20'||year_part ELSE '19'||year_part END AS year,COUNT(*) AS no_registrations FROM (SELECT SPLIT_PART(registration_date,'-',1) AS date_part,SPLIT_PART(registration_date,'-',3) AS year_part FROM maharashtra ) AS divied_table GROUP BY year ORDER BY no_registrations DESC LIMIT 10;

3. SELECT district,COUNT(*) AS no_registrations FROM (SELECT REGEXP_REPLACE(registered_office_address, '^.* ', '') AS pincode FROM maharashtra WHERE LENGTH(SPLIT_PART(registration_date,'-',1))<3 AND SPLIT_PART(registration_date,'-',3)='15') AS temp JOIN zipcode_district on SUBSTR(temp.pincode,1,4)=SUBSTR(zipcode_district.pincode,1,4) GROUP BY district ORDER BY no_registrations DESC;


4. WITH registrations_by_year_by_pba AS (SELECT '20'||year_part AS year,pba,COUNT(*) AS no_registrations FROM (SELECT SPLIT_PART(registration_date,'-',3) AS year_part,principal_business_activity AS pba FROM maharashtra WHERE LENGTH(SPLIT_PART(registration_date,'-',1))<3 ) AS filtered_table WHERE cast(year_part AS int)>=12 AND cast(year_part AS int)<=21 GROUP BY year,pba)
SELECT year,pba,no_registrations FROM registrations_by_year_by_pba WHERE pba IN (SELECT top_pbas.pba FROM (SELECT temp.pba,SUM(temp.no_registrations) AS count FROM registrations_by_year_by_pba AS temp GROUP BY pba ORDER BY count DESC LIMIT 5) AS top_pbas) ORDER BY year;


